{"version":3,"sources":["components/RouteWithLayout/index.js","layouts/Main.js","redux/actions/actionTypes.js","components/Post/index.js","components/AddPost/index.js","components/UpdatePost/index.js","pages/BlogPost.js","redux/actions/index.js","Routes.js","App.js","redux/reducers/addPost.js","redux/reducers/getPosts.js","redux/reducers/updatePost.js","redux/reducers/deletePost.js","redux/reducers/index.js","server/api.js","redux/sagas/getPosts.js","redux/sagas/addPost.js","redux/sagas/deletePost.js","redux/sagas/updatePost.js","redux/store.js","index.js"],"names":["RouteWithLayout","props","Layout","layout","Component","component","rest","render","matchProps","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","main","margin","Header","classes","AppBar","position","Toolbar","Typography","variant","className","Main","children","GET_POSTS","GOT_POSTS","ADD_POST","ADDED_POST","UPDATE_POST","UPDATED_POST","DELETE_POST","DELETED_POST","width","bullet","display","transform","fontSize","fontWeight","content","Post","post","handleDelete","handleOpen","Card","CardContent","color","gutterBottom","id","text","CardActions","Button","onClick","size","flexDirection","justifyContent","AddPost","state","handleAddPost","handleStateChange","TextField","fullWidth","value","onChange","e","target","disabled","minWidth","UpdatePostDialog","openDialog","handleClose","handleSave","handlePostChange","Dialog","paper","open","onClose","DialogTitle","DialogContent","autoFocus","label","type","DialogActions","connect","console","log","posts","getPosts","addedPost","addPost","deletedPost","deletePost","updatedPost","updatePost","dispatch","actions","payload","useState","setState","setOpenDialog","handleOpenDialog","handleDeletePost","cleanState","useEffect","Grid","container","direction","alignItems","justify","item","xs","_id","uuidv4","map","UpdatePost","Routes","BlogPost","exact","MainLayout","path","App","initialState","combineReducers","action","actionType","Posts","add","data","Promise","resolve","push","setTimeout","update","targetIndex","findIndex","x","Error","delete","splice","affected","getAll","getPostsSaga","fetchPosts","takeEvery","call","postsblogPostApi","postsResponse","put","addPostSaga","postResponse","deletePostSaga","updatePostSaga","sagaMiddleware","createSagaMiddleware","middleware","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","store","createStore","rootReducer","run","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.628a34f1.chunk.js","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom'; // Library to manage react routes\nimport PropTypes from 'prop-types'; //Library to check props data types. Ex: String, array etc..\n\nconst RouteWithLayout = (props) => {\n  const { layout: Layout, component: Component, ...rest } = props; // get data(objects) from props\n\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n        /* Layout component sets the layout View for page and \n        it has Children Component that we pass dynimically */\n        <Layout>\n           {/* matchProps holds the route parameters that are passed to Custom Components*/}\n          <Component {...matchProps} />\n        </Layout>\n      )}\n    />\n  );\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string\n};\n\nexport default RouteWithLayout;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    main: {\n        margin: theme.spacing(2)\n    }\n}));\n\n\nconst Header = () => {\n    const classes = useStyles();\n    return (<AppBar position=\"static\">\n        <Toolbar>\n            <Typography variant=\"h6\" className={classes.title}>\n                Blog Posts\n            </Typography>\n        </Toolbar>\n    </AppBar>);\n}\n\nexport default function Main(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Header />\n            <main className={classes.main}>\n                {props.children}\n            </main>\n        </div>\n    );\n}\n","export const GET_POSTS = 'GET_POSTS';\nexport const GOT_POSTS = 'GOT_POSTS';\n\nexport const ADD_POST = 'ADD_POST';\nexport const ADDED_POST = 'ADDED_POST';\n\nexport const UPDATE_POST='UPDATE_POST';\nexport const UPDATED_POST='UPDATED_POST';\n\nexport const DELETE_POST = 'DELETE_POST';\nexport const DELETED_POST = 'DELETED_POST';","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 400,\n        margin: theme.spacing(2, 0)\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 18,\n        fontWeight: 'bold'\n    },\n    content: {\n        fontSize: 16,\n    },\n}));\n\nconst Post = (props) => {\n    const { post, handleDelete, handleOpen } = props;\n    const classes = useStyles();\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography className={classes.title} color=\"primary\" gutterBottom>\n                    {post.id}\n                </Typography>\n                <Typography className={classes.content} color=\"textSecondary\" gutterBottom>\n                    {post.text}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button onClick={() => handleOpen(post)} size=\"small\">Edit</Button>\n                {\" \"}\n                <Button onClick={() => handleDelete(post.id)} size=\"small\">Delete</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default Post;\n","import { TextField, Button } from '@material-ui/core'\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport * as actionType from \"../../redux/actions\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: 400,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    }\n});\n\n\nconst AddPost = (props) => {\n    const classes = useStyles();\n    const { state, handleAddPost, handleStateChange } = props;\n\n    return (\n        <div className={classes.root}>\n            <TextField\n                fullWidth\n                value={state.text || ''}\n                onChange={(e) => handleStateChange({\n                    ...state,\n                    text: e.target.value\n                })} />\n            <br />\n            <Button\n                disabled={state.text === ''}\n                onClick={handleAddPost}\n            >\n                Add\n            </Button>\n        </div>\n    )\n}\n\nexport default AddPost;","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 500\n    },\n}));\n\n\nexport const UpdatePostDialog = (props) => {\n    const classes = useStyles();\n    const { openDialog, handleClose, handleSave, handlePostChange } = props;\n    return (\n        <div>\n            <Dialog classes={{ paper: classes.root }} open={openDialog.open} onClose={handleClose}>\n                <DialogTitle>Update post</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        value={openDialog.post.text}\n                        onChange={(e) => handlePostChange(e.target.value)}\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Post\"\n                        type=\"text\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button disabled={openDialog.post.text === ''} onClick={handleSave} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default UpdatePostDialog;\n","import { Grid, Paper } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as actionType from \"../redux/actions\";\nimport Post from '../components/Post';\nimport AddPost from \"../components/AddPost\";\nimport UpdatePostDialog\n    from '../components/UpdatePost';\n\nconst BlogPost = (props) => {\n    const { posts, addedPost, deletedPost, updatedPost,  actions } = props;\n    const [state, setState] = useState({\n        text: ''\n    });\n\n    const [openDialog, setOpenDialog] = useState({\n        open: false,\n        post: {}\n    });\n\n    const handleCloseDialog = () => {\n        setOpenDialog({\n            ...openDialog,\n            open: false\n        });\n    };\n\n    const handleOpenDialog = (post) => {\n        setOpenDialog({\n            open: true,\n            post\n        })\n    };\n\n    const handleOpenDialogPostChange = (value) => {\n        setOpenDialog({\n            ...openDialog,\n            post: {\n                ...openDialog.post,\n                text: value\n            }\n        })\n    };\n\n    const handleAddPost = () => {\n        const _id = uuidv4();\n        console.log(_id);\n        const post = {\n            id: _id,\n            text: state.text\n        }\n        actions.addPost(post);\n\n        cleanState();\n    };\n\n    const handleSavePost = () => {\n\n        actions.updatePost(openDialog.post);\n        setOpenDialog({\n            ...openDialog,\n            open: false\n        });\n    };\n\n    const handleDeletePost = (id) => {\n        actions.deletePost(id);\n    };\n\n    const cleanState = () => {\n        setState({\n            text: ''\n        })\n    };\n\n    useEffect(() => {\n        actions.getPosts();\n    }, []);\n    useEffect(() => {\n        if (addedPost || updatedPost ||deletedPost) {\n            actions.getPosts();\n        }\n    }, [addedPost, updatedPost, deletedPost])\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n        >\n            <Grid item xs={12}>\n                <AddPost\n                    state={state}\n                    handleAddPost={handleAddPost}\n                    handleStateChange={setState}\n                />\n                {posts && posts.map((post) =>\n                    <Post\n                        key={post.id}\n                        post={post}\n                        handleOpen={handleOpenDialog}\n                        handleDelete={handleDeletePost}\n                    />\n                )}\n\n            </Grid>\n            <UpdatePostDialog\n                openDialog={openDialog}\n                handleClose={handleCloseDialog}\n                handleSave={handleSavePost}\n                handlePostChange={handleOpenDialogPostChange}\n            />\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return ({\n        posts: state.getPosts.posts,\n        addedPost: state.addPost.post,\n        deletedPost: state.deletePost.post,\n        updatedPost: state.updatePost.post\n    })\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    actions: {\n        getPosts: () => {\n            dispatch(actionType.getPosts());\n        },\n        addPost: (payload) => {\n            dispatch(actionType.addPost(payload));\n        },\n        deletePost: (payload) => {\n            dispatch(actionType.deletePost(payload));\n        },\n        updatePost: (payload) => {\n            dispatch(actionType.updatePost(payload));\n        }\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogPost);\n","import {\n    GET_POSTS,\n    ADD_POST,\n    DELETE_POST,\n    UPDATE_POST\n} from \"./actionTypes\";\n\nexport const getPosts = () => {\n    return {\n        type: GET_POSTS,\n    };\n};\nexport const addPost = (data) => {\n    return {\n        type: ADD_POST, payload: data\n    };\n};\nexport const updatePost = (data) => {\n    return {\n        type: UPDATE_POST, payload: data\n    };\n};\nexport const deletePost = (id) => {\n    return {\n        type: DELETE_POST, payload: id\n    };\n};","import React from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\n\nimport RouteWithLayout from './components/RouteWithLayout';\nimport MainLayout from './layouts/Main';\n\nimport {\n    BlogPost\n} from './pages';\n\nconst Routes = () => {\n    return (\n        <Switch>\n            {/* Redirect to \"/dashboard\" when user access root route \"/\" */}\n            <RouteWithLayout\n                component={BlogPost}\n                exact\n                layout={MainLayout}\n                path=\"/\"\n            />\n        </Switch>\n    );\n};\n\nexport default Routes;\n","import { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import * as actionType from \"../actions/actionTypes\";\n\nconst initialState = {\n    post: null\n};\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case actionType.ADDED_POST: {\n            return {\n                ...state,\n                post: action.payload\n            };\n        }\n        default: {\n            return { ...state };\n        }\n    }\n}\n","import * as actionType from \"../actions/actionTypes\";\n\nconst initialState = {\n  posts: []\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case actionType.GOT_POSTS: {\n      return {\n        ...state,\n        posts: action.payload,\n      };\n    }\n    default: {\n      return { ...state };\n    }\n  }\n}\n","import * as actionType from \"../actions/actionTypes\";\n\nconst initialState = {\n    post: null\n};\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case actionType.UPDATED_POST: {\n            return {\n                ...state,\n                post: action.payload\n            };\n        }\n        default: {\n            return { ...state };\n        }\n    }\n}\n","import * as actionType from \"../actions/actionTypes\";\n\nconst initialState = {\n    post: null\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case actionType.DELETED_POST: {\n            return {\n                ...state,\n                post: action.payload\n            };\n        }\n        default: {\n            return { ...state };\n        }\n    }\n}\n","import { combineReducers } from \"redux\";\n\nimport addPost from \"./addPost\";\nimport getPosts from \"./getPosts\";\nimport updatePost from \"./updatePost\";\nimport deletePost from \"./deletePost\";\n\nexport default combineReducers({\n    addPost,\n    getPosts,\n    updatePost,\n    deletePost\n});\n","import { v4 as uuidv4 } from 'uuid';\nconst Posts = [\n    {\n        id: uuidv4(),\n        text: \"This is my first post. I will upload technical contents in my upcoming posts. See you!\"\n    }\n];\n\nexport default {\n    add: async function (data) {\n        new Promise((resolve) => {\n            Posts.push(data);\n            setTimeout(resolve(data), 1000);\n        });\n    },\n\n    update: async function (data) {\n        return new Promise((resolve) => {\n            const { id, ...rest } = data;\n            const targetIndex = Posts.findIndex(x => x.id === id)\n            if (targetIndex > -1) {\n                Posts[targetIndex] = { ...data }\n            } else {\n                new Error(\"Failed to update.\")\n            }\n            setTimeout(resolve(data), 1000);\n        });\n    },\n    delete: async function (id) {\n        return new Promise((resolve) => {\n            const targetIndex = Posts.findIndex(x => x.id === id)\n            if (targetIndex > -1)\n                Posts.splice(targetIndex, 1);\n            else {\n                new Error(\"Failed to delete.\")\n            }\n            setTimeout(resolve({ affected: 1 }), 1000);\n        });\n    },\n    getAll: async function () {\n        return new Promise((resolve) => {\n            setTimeout(resolve(Posts), 2000);\n        });\n    }\n}","import { all, put, call, takeEvery } from \"redux-saga/effects\";\nimport * as actionType from \"../actions/actionTypes\";\nimport postsblogPostApi from \"../../server/api\";\n\nexport default function* getPostsSaga() {\n    yield takeEvery(actionType.GET_POSTS, fetchPosts);\n}\n\nfunction* fetchPosts() {\n    try {\n        const postsResponse = yield call(postsblogPostApi.getAll);\n        yield put({ type: actionType.GOT_POSTS, payload: postsResponse });\n    } catch (err) {\n        console.log(err);\n    }\n}","import { all, put, call, takeEvery } from \"redux-saga/effects\";\nimport * as actionType from \"../actions/actionTypes\";\nimport postsblogPostApi from \"../../server/api\";\n\nexport default function* addPostSaga() {\n    yield takeEvery(actionType.ADD_POST, addPost);\n}\n\nfunction* addPost(action) {\n    console.log(action)\n    try {\n        const postResponse = yield call(postsblogPostApi.add, action.payload);\n        yield put({ type: actionType.ADDED_POST, payload: postResponse });\n    } catch (err) {\n        console.log(err);\n    }\n}","import { all, put, call, takeEvery } from \"redux-saga/effects\";\nimport * as actionType from \"../actions/actionTypes\";\nimport postsblogPostApi from \"../../server/api\";\n\nexport default function* deletePostSaga() {\n    yield takeEvery(actionType.DELETE_POST, deletePost);\n}\n\nfunction* deletePost(action) {\n    console.log(action)\n    try {\n        const postResponse = yield call(postsblogPostApi.delete, action.payload);\n        yield put({ type: actionType.DELETED_POST, payload: postResponse });\n    } catch (err) {\n        console.log(err);\n    }\n}","import { all, put, call, takeEvery } from \"redux-saga/effects\";\nimport * as actionType from \"../actions/actionTypes\";\nimport postsblogPostApi from \"../../server/api\";\n\nexport default function* updatePostSaga() {\n    yield takeEvery(actionType.UPDATE_POST, updatePost);\n}\n\nfunction* updatePost(action) {\n    console.log(action)\n    try {\n        const postResponse = yield call(postsblogPostApi.update, action.payload);\n        yield put({ type: actionType.UPDATED_POST, payload: postResponse });\n    } catch (err) {\n        console.log(err);\n    }\n}","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./reducers/index\";\n\nimport { getPostsSaga, addPostSaga, deletePostSaga, updatePostSaga } from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst reduxDevTools =\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nconst middleware =\n    window.__REDUX_DEVTOOLS_EXTENSION__ && process.env.NODE_ENV === \"development\"\n        ? compose(applyMiddleware(sagaMiddleware), reduxDevTools)\n        : applyMiddleware(sagaMiddleware);\n\n\nexport const store = createStore(rootReducer, middleware);\n\nsagaMiddleware.run(getPostsSaga);\nsagaMiddleware.run(addPostSaga);\nsagaMiddleware.run(updatePostSaga);\nsagaMiddleware.run(deletePostSaga);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}